name: Trello Integration

on:
  pull_request:
    types: [ opened, reopened, closed ]

jobs:
  update-trello:
    runs-on: ubuntu-latest
    steps:
      - name: Update Trello Card
        uses: actions/github-script@v7
        env:
          TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
          TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
          TRELLO_BOARD_ID: ${{ secrets.TRELLO_BOARD_ID }}
          IN_PROGRESS_LIST_ID: ${{ secrets.TRELLO_IN_PROGRESS_LIST_ID }}
          DONE_LIST_ID: ${{ secrets.TRELLO_DONE_LIST_ID }}
        with:
          script: |
            const prTitle = context.payload.pull_request.title;
            const prUrl = context.payload.pull_request.html_url;
            const prState = context.payload.pull_request.state;
            const isMerged = context.payload.pull_request.merged;
            
            async function getTrelloCards() {
              const response = await fetch(
                `https://api.trello.com/1/boards/${process.env.TRELLO_BOARD_ID}/cards?key=${process.env.TRELLO_API_KEY}&token=${process.env.TRELLO_TOKEN}`
              );
              return response.json();
            }
            
            async function updateCardList(cardId, listId) {
              const response = await fetch(
                `https://api.trello.com/1/cards/${cardId}?key=${process.env.TRELLO_API_KEY}&token=${process.env.TRELLO_TOKEN}`,
                {
                  method: 'PUT',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    idList: listId
                  })
                }
              );
              return response.json();
            }
            
            async function addComment(cardId, comment) {
              const response = await fetch(
                `https://api.trello.com/1/cards/${cardId}/actions/comments?key=${process.env.TRELLO_API_KEY}&token=${process.env.TRELLO_TOKEN}`,
                {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    text: comment
                  })
                }
              );
              return response.json();
            }
            
            try {
              const cards = await getTrelloCards();
            
              const matchingCard = cards.find(card => 
                card.name.toLowerCase() === prTitle.toLowerCase() ||
                prTitle.toLowerCase().includes(card.name.toLowerCase())
              );
            
              if (matchingCard) {
                if (context.payload.action === 'opened' || context.payload.action === 'reopened') {
                  await updateCardList(matchingCard.id, process.env.IN_PROGRESS_LIST_ID);
                  await addComment(matchingCard.id, `Создан Pull Request: [${prTitle}](${prUrl})`);
                  console.log(`Updated Trello card status and added PR link: ${matchingCard.name}`);
                }
            
                if (context.payload.action === 'closed' && isMerged) {
                  await updateCardList(matchingCard.id, process.env.DONE_LIST_ID);
                  await addComment(matchingCard.id, `✅ Pull Request merged: [${prTitle}](${prUrl})`);
                  console.log(`Moved Trello card to Done: ${matchingCard.name}`);
                }
              } else {
                console.log('No matching Trello card found');
              }
            } catch (error) {
              console.error('Error updating Trello card:', error);
              core.setFailed(error.message);
            }